#!/usr/bin/env bash
# Displays information about subdomains.

# Uncomment for debugging purposes.
#set -x

# Colors
blue='\e[1;34m'
brown='\e[0;33m'
reset='\033[0m'

# Check for dependencies
if ! command -v dig &> /dev/null; then
    echo "Error: 'dig' command not found. Please install it before running this script."
    exit 1
fi

# Function to display subdomain information
dig_cmd() {
    local sub="$1"
    local domain="$2"
    
    local info
    info="$(dig "$sub.$domain" | grep -A1 'ANSWER SECTION:' | awk 'NR==2')"
    
    if [ -n "$info" ]; then
        local ip record
        ip=$(echo "$info" | awk '{print $5}')
        record=$(echo "$info" | awk '{print $4}')
        echo -e "${brown}The subdomain ${blue}$sub${brown} is a ${blue}$record${brown} record and points to ${blue}$ip${reset}"
    else
        echo -e "${brown}No information found for subdomain ${blue}$sub${reset}"
    fi
}

# Main script
if [ $# -lt 1 ] || [ $# -gt 2 ]; then
    echo "Usage: $0 <domain> [subdomain]"
    exit 1
fi

# Allow multiple domains
for domain in "${@:1:$#-1}"; do
    if [ $# -eq 1 ]; then
        # Iterate over predefined subdomains
        subdomains=("www" "lb-01" "web-01" "web-02")
        for sub in "${subdomains[@]}"; do
            dig_cmd "$sub" "$domain"
        done
    elif [ $# -eq 2 ]; then
        # Display information for the specified subdomain
        dig_cmd "$2" "$domain"
    fi
done
